{
  "name": "machine-learning",
  "$schema": "http://solettaproject.github.io/soletta/schemas/node-type-genspec.schema",
  "meta": {
    "author": "Intel Corporation",
    "license": "BSD 3-Clause",
    "version": "1"
  },
  "types": [
    {
      "category": "machine-learning",
      "description": "Tag output variables.",
      "in_ports": [
       {
        "data_type": "float",
        "description": "Output variable value to be tagged.",
        "methods": {
         "process": "tagger_process"
        },
        "name": "IN"
       }
      ],
      "methods": {
       "close": "tagger_close",
       "open": "tagger_open"
      },
      "name": "machine-learning/tagger",
      "options": {
       "members": [
        {
         "data_type": "string",
         "description": "Tag to be applied to all packets passing through this node.",
         "name": "tag"
        }
       ],
       "version": 1
      },
      "out_ports": [
       {
        "data_type": "custom:PACKET_TYPE_TAGGED_FLOAT",
        "description": "Tagged float.",
        "name": "OUT"
       }
      ],
      "private_data_type": "tagger_data",
      "url": "http://soletta.org/doc/latest/node_types/machine_learning/tagger.html"
    },
    {
      "category": "machine-learning",
      "description": "Filter output variables.",
      "in_ports": [
       {
        "data_type": "custom:PACKET_TYPE_TAGGED_FLOAT",
        "description": "Output variable value to be filtered.",
        "methods": {
         "process": "filter_process"
        },
        "name": "IN"
       }
      ],
      "methods": {
       "close": "tagger_close",
       "open": "tagger_open"
      },
      "name": "machine-learning/filter",
      "options": {
       "members": [
        {
         "data_type": "string",
         "description": "Tag to be used to filter packets passing through this node. If the packet's tag doesn't match this option, no packet will be sent in 'OUT' port. Otherwise a packet with only the float value will be sent.",
         "name": "tag"
        }
       ],
       "version": 1
      },
      "out_ports": [
       {
        "data_type": "float",
        "description": "Only the float value for packets that match the tag.",
        "name": "OUT"
       }
      ],
      "private_data_type": "tagger_data",
      "url": "http://soletta.org/doc/latest/node_types/machine_learning/filter.html"
    },
    {
      "category": "machine-learning",
      "description": "Learn output values based on input and output observation. Uses a fuzzy logic algorithm.",
      "in_ports": [
       {
        "data_type": "float",
        "description": "Port for inputs sending float packets.",
        "methods": {
         "connect": "input_var_connect",
         "process": "input_var_process"
        },
        "name": "IN_VAR"
       },
       {
        "data_type": "float",
        "description": "Port for id inputs sending float packets.",
        "methods": {
         "connect": "input_var_connect",
         "process": "input_var_process"
        },
        "name": "IN_ID_VAR"
       },
       {
        "data_type": "custom:PACKET_TYPE_TAGGED_FLOAT",
        "description": "Port for outputs sending tagged float packets.",
        "methods": {
         "connect": "output_var_connect",
         "process": "output_var_process"
        },
        "name": "OUT_VAR"
       },
       {
        "data_type": "custom:PACKET_TYPE_TAGGED_FLOAT",
        "description": "Port for id outputs sending tagged float packets.",
        "methods": {
         "connect": "output_var_connect",
         "process": "output_var_process"
        },
        "name": "OUT_ID_VAR"
       },
       {
        "data_type": "any",
        "description": "Port used to trigger machine learning prediction.",
        "methods": {
         "process": "prediction_trigger_process"
        },
        "name": "PREDICTION_TRIGGER"
       },
       {
        "data_type": "any",
        "description": "Port used to trigger machine learning processing.",
        "methods": {
         "process": "trigger_process"
        },
        "name": "TRIGGER"
       },
       {
        "data_type":"any",
        "description": "Port used to save fuzzy data",
        "methods": {
            "process": "save_process"
        },
        "name":"SAVE"
       }
      ],
      "methods": {
       "close": "machine_learning_close",
       "open": "machine_learning_fuzzy_open"
      },
      "name": "machine-learning/fuzzy",
      "options": {
       "members": [
        {
         "data_type": "int",
         "default": 5,
         "description": "Amount of reads without input changes to consider input stable. If zero, it's always considered stable.",
         "name": "stabilization_hits"
        },
        {
         "data_type": "int",
         "default": 15,
         "description": "Number of fuzzy terms to be created for each variable.",
         "name": "number_of_terms"
        },
        {
         "data_type": "string",
         "default": null,
         "description": "The directory that the neural network data files will be saved/loaded",
         "name": "data_dir"
        }
       ],
       "version": 1
      },
      "out_ports": [
       {
        "data_type": "custom:PACKET_TYPE_TAGGED_FLOAT",
        "description": "Prediction values for output variables.",
        "name": "OUT"
       },
       {
        "data_type": "empty",
        "description": "Process has finished.",
        "name": "PROCESS_FINISHED"
       }
      ],
      "private_data_type": "machine_learning_data",
      "url": "http://soletta.org/doc/latest/node_types/machine_learning/fuzzy.html"
    },
    {
      "category": "machine-learning",
      "description": "Learn output values based on input and output observation. Uses neural network algorithm.",
      "in_ports": [
       {
        "data_type": "float",
        "description": "Port for inputs sending float packets.",
        "methods": {
         "connect": "input_var_connect",
         "process": "input_var_process"
        },
        "name": "IN_VAR"
       },
       {
        "data_type": "float",
        "description": "Port for inputs sending float packets.",
        "methods": {
         "connect": "input_var_connect",
         "process": "input_var_process"
        },
        "name": "IN_ID_VAR"
       },
       {
        "data_type": "custom:PACKET_TYPE_TAGGED_FLOAT",
        "description": "Port for outputs sending tagged float packets.",
        "methods": {
         "connect": "output_var_connect",
         "process": "output_var_process"
        },
        "name": "OUT_VAR"
       },
       {
        "data_type": "custom:PACKET_TYPE_TAGGED_FLOAT",
        "description": "Port for id outputs sending tagged float packets.",
        "methods": {
         "connect": "output_var_connect",
         "process": "output_var_process"
        },
        "name": "OUT_ID_VAR"
       },
       {
        "data_type": "any",
        "description": "Port used to trigger machine learning prediction.",
        "methods": {
         "process": "prediction_trigger_process"
        },
        "name": "PREDICTION_TRIGGER"
       },
       {
        "data_type": "any",
        "description": "Port used to trigger machine learning processing.",
        "methods": {
         "process": "trigger_process"
        },
        "name": "TRIGGER"
       },
       {
        "data_type":"any",
        "description": "Port used to save neural network data",
        "methods": {
            "process": "save_process"
        },
        "name":"SAVE"
       }
      ],
      "methods": {
       "close": "machine_learning_close",
       "open": "machine_learning_neural_network_open"
      },
      "name": "machine-learning/neural-network",
      "options": {
       "members": [
        {
         "data_type": "int",
         "default": 5,
         "description": "Amount of reads without input changes to consider input stable. If zero, it's always considered stable.",
         "name": "stabilization_hits"
        },
        {
         "data_type": "int",
         "default": 0,
         "description": "Amound of initial observations necessary to first neural network training. If zero or negative, the default initial observation value will be used.",
         "name": "initial_required_observations"
        },
        {
         "data_type": "float",
         "default": 0.1,
         "description": "Desired mean squared error. It's the difference between the estimator and what is estimated. The neural network will try to reach this value. Higher values can be reached easily, requiring less time and processing on training phase. Also, it won't try to guess the output if the desired mse wasn't reached.",
         "name": "mse"
        },
        {
         "data_type": "string",
         "default": "rprop",
         "description": "Training algorithm to be used by the neural network. Supported algorithms are: 'rprop' - resilient backpropagation, and 'quickprop' - discrete pseudo-Newton method.",
         "name": "training_algorithm"
        },
        {
         "data_type": "string",
         "default": "sigmoid sigmoid_symmetric gaussian gaussian_symmetric elliot elliot_symmetric cos cos_symmetric sin sin_symmetric",
         "description": "Activation functions that may be used for neural network. It'll try to use all of these functions to get the best one for its observations. Supported activation functions are: sigmoid sigmoid_symmetric gaussian gaussian_symmetric elliot elliot_symmetric cos cos_symmetric sin sin_symmetric. It's possible to set more than one, separeted by space. By default all of them are considered candidates. Reducing this set will reduce processing on training phase.",
         "name": "activation_functions"
        },
        {
         "data_type": "string",
         "default": null,
         "description": "The directory that the neural network data files will be saved/loaded",
         "name": "data_dir"
        }
       ],
       "version": 1
      },
      "out_ports": [
       {
        "data_type": "custom:PACKET_TYPE_TAGGED_FLOAT",
        "description": "Prediction values for output variables.",
        "name": "OUT"
       },
       {
        "data_type": "empty",
        "description": "Process has finished.",
        "name": "PROCESS_FINISHED"
       }
      ],
      "private_data_type": "machine_learning_data",
      "url": "http://soletta.org/doc/latest/node_types/machine_learning/neural_network.html"
    },
    {
      "category": "machine-learning",
      "description": "Learn output values based on input and output observation. Uses a fuzzy logic algorithm.",
      "in_ports": [
       {
        "data_type": "custom:PACKET_TYPE_SML_DATA",
        "description": "Port to receive SML data packets.",
        "methods": {
         "process": "sml_data_process"
        },
        "name": "IN"
       },
       {
        "data_type": "custom:PACKET_TYPE_SML_DATA",
        "description": "Port to receive SML data packets to run sml in prediction mode.",
        "methods": {
         "process": "sml_data_process"
        },
        "name": "IN_PREDICT"
       },
       {
        "data_type": "string",
        "description": "File to log sml read data and predicted outputs.",
        "methods": {
         "process": "sml_data_debug_file"
        },
        "name": "DEBUG_FILE"
       },
       {
        "data_type":"any",
        "description": "Port used to save fuzzy data",
        "methods": {
            "process": "sml_data_save_process"
        },
        "name":"SAVE"
       }
      ],
      "methods": {
       "close": "machine_learning_sync_close",
       "open": "fuzzy_sync_open"
      },
      "name": "machine-learning/fuzzy-sync",
      "options": {
       "members": [
        {
         "data_type": "int",
         "default": 5,
         "description": "Amount of reads without input changes to consider input stable. If zero, it's always considered stable.",
         "name": "stabilization_hits"
        },
        {
         "data_type": "int",
         "default": 15,
         "description": "Number of fuzzy terms to be created for each variable.",
         "name": "number_of_terms"
        },
        {
         "data_type": "string",
         "default": null,
         "description": "The directory that the fuzzy data files will be saved/loaded",
         "name": "data_dir"
        }
       ],
       "version": 1
      },
      "out_ports": [
       {
        "data_type": "custom:PACKET_TYPE_SML_OUTPUT_DATA",
        "description": "Prediction values for output variables.",
        "name": "OUT"
       },
       {
        "data_type": "custom:PACKET_TYPE_SML_OUTPUT_DATA",
        "description": "Prediction values for output variables when prediction is called.",
        "name": "OUT_PREDICT"
       }
      ],
      "private_data_type": "machine_learning_sync_data",
      "url": "http://soletta.org/doc/latest/node_types/machine_learning/fuzzy_sync.html"
    },
    {
      "category": "machine-learning",
      "description": "Learn output values based on input and output observation. Uses neural network algorithm.",
      "in_ports": [
       {
        "data_type": "custom:PACKET_TYPE_SML_DATA",
        "description": "Port to receive SML data packets.",
        "methods": {
         "process": "sml_data_process"
        },
        "name": "IN"
       },
       {
        "data_type": "custom:PACKET_TYPE_SML_DATA",
        "description": "Port to receive SML data packets to run sml in prediction mode.",
        "methods": {
         "process": "sml_data_process"
        },
        "name": "IN_PREDICT"
       },
       {
        "data_type": "string",
        "description": "File to log sml read data and predicted outputs.",
        "methods": {
         "process": "sml_data_debug_file"
        },
        "name": "DEBUG_FILE"
       },
       {
        "data_type":"any",
        "description": "Port used to save neural network data",
        "methods": {
            "process": "sml_data_save_process"
        },
        "name":"SAVE"
       }
      ],
      "methods": {
       "close": "machine_learning_sync_close",
       "open": "neural_network_sync_open"
      },
      "name": "machine-learning/neural-network-sync",
      "options": {
       "members": [
        {
         "data_type": "int",
         "default": 5,
         "description": "Amount of reads without input changes to consider input stable. If zero, it's always considered stable.",
         "name": "stabilization_hits"
        },
        {
         "data_type": "int",
         "default": 0,
         "description": "Amound of initial observations necessary to first neural network training. If zero or negative, the default initial observation value will be used.",
         "name": "initial_required_observations"
        },
        {
         "data_type": "float",
         "default": 0.1,
         "description": "Desired mean squared error. It's the difference between the estimator and what is estimated. The neural network will try to reach this value. Higher values can be reached easily, requiring less time and processing on training phase. Also, it won't try to guess the output if the desired mse wasn't reached.",
         "name": "mse"
        },
        {
         "data_type": "string",
         "default": "rprop",
         "description": "Training algorithm to be used by the neural network. Supported algorithms are: 'rprop' - resilient backpropagation, and 'quickprop' - discrete pseudo-Newton method.",
         "name": "training_algorithm"
        },
        {
         "data_type": "string",
         "default": "sigmoid sigmoid_symmetric gaussian gaussian_symmetric elliot elliot_symmetric cos cos_symmetric sin sin_symmetric",
         "description": "Activation functions that may be used for neural network. It'll try to use all of these functions to get the best one for its observations. Supported activation functions are: sigmoid sigmoid_symmetric gaussian gaussian_symmetric elliot elliot_symmetric cos cos_symmetric sin sin_symmetric. It's possible to set more than one, separeted by space. By default all of them are considered candidates. Reducing this set will reduce processing on training phase.",
         "name": "activation_functions"
        },
        {
         "data_type": "string",
         "default": null,
         "description": "The directory that the neural network data files will be saved/loaded",
         "name": "data_dir"
        }
       ],
       "version": 1
      },
      "out_ports": [
       {
        "data_type": "custom:PACKET_TYPE_SML_OUTPUT_DATA",
        "description": "Prediction values for output variables.",
        "name": "OUT"
       },
       {
        "data_type": "custom:PACKET_TYPE_SML_OUTPUT_DATA",
        "description": "Prediction values for output variables when prediction is called.",
        "name": "OUT_PREDICT"
       }
      ],
      "private_data_type": "machine_learning_sync_data",
      "url": "http://soletta.org/doc/latest/node_types/machine_learning/neural_network_sync.html"
    },
    {
      "category": "machine-learning",
      "description": "Filter output variables.",
      "in_ports": [
       {
        "data_type": "custom:PACKET_TYPE_SML_OUTPUT_DATA",
        "description": "Output variable value to be filtered.",
        "methods": {
         "process": "filter_sync_process"
        },
        "name": "IN"
       }
      ],
      "name": "machine-learning/filter-sync",
      "out_ports": [
       {
        "data_type": "float",
        "description": "Array of output values. Index in array matches output position in sml",
        "name": "OUT[32]"
       }
      ],
      "url": "http://soletta.org/doc/latest/node_types/machine_learning/filter.html"
    }
  ]
}
